{{- range .Values.modules }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  {{ $.Values.project }}-{{ .name }}
spec:
  replicas: {{ .replicas }}
  selector:
    matchLabels:
      app: {{ $.Values.project }}-{{ .name }}
  template:
    metadata:
      labels:
        app: {{ $.Values.project }}-{{ .name }}
    spec:
      priorityClassName: "priority-class-mw-pods"
      containers:
        - name: {{ $.Values.project }}-{{ .name }}
          image: {{ $.Values.aws_account_id }}.dkr.ecr.{{ $.Values.region }}.amazonaws.com/{{ $.Values.env }}-{{ $.Values.project }}-{{ .name }}:{{ $.Values.version }}
          imagePullPolicy: Always
          ports:
            - containerPort: {{ .containerPort }}
          volumeMounts:
            - mountPath: {{ .logPath }}
              name: log-volume
          resources:
            requests:
              memory: {{ .requests_memory }}
              cpu: {{ .requests_cpu }}
            limits:
              memory: {{ .limit_memory }}
              cpu: {{ .limit_cpu }}
          livenessProbe:
            httpGet:
              port: {{ .containerPort }}
              path: /actuator/health
            initialDelaySeconds: {{ .livenessProbe_initialDelaySeconds }}
            periodSeconds: {{ .livenessProbe_periodSeconds }}
          readinessProbe:
            httpGet:
              port: {{ .containerPort }}
              path: /actuator/health
            initialDelaySeconds: {{ .readinessProbe_initialDelaySeconds }}
            periodSeconds: {{ .readinessProbe_periodSeconds }}
      terminationGracePeriodSeconds: {{ .terminationGracePeriodSeconds }}
      volumes:
        - name: log-volume
          hostPath:
            path: /var/lib/docker/containers/{{ .name }}
            type: Directory
---
{{- end }}
